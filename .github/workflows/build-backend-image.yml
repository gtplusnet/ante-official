name: Build and Push Backend Docker Image

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/build-backend-image.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ante-backend-staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: production-alpine
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DIRECT_URL=${{ secrets.DIRECT_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger DigitalOcean Deployment
        if: success()
        env:
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
          DO_APP_ID: ${{ secrets.DO_APP_ID_STAGING }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${DO_API_TOKEN}" \
            -H "Content-Type: application/json" \
            "https://api.digitalocean.com/v2/apps/${DO_APP_ID}/deployments" \
            -d '{"force_build": false}'
