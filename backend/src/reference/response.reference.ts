export default {
  account: {
    id: 'string',
    email: 'string',
    username: 'string',
    firstName: 'string',
    middleName: 'string',
    lastName: 'string',
    contactNumber: 'string',
    status: 'string',
    createdAt: 'date',
    role: 'role',
    parentAccountId: 'string',
    image: 'string',
    parent: 'account',
    watcherType: 'ref:watcher-type',
  },
  role: {
    id: 'string',
    name: 'string',
    description: 'string',
    isDeveloper: 'boolean',
    isDeleted: 'boolean',
    updatedAt: 'date',
    createdAt: 'date',
    roleScope: 'roleScope',
    roleGroupId: 'string',
    roleGroup: 'roleGroup',
    parentRole: 'role',
    level: 'string',
  },
  roleScope: {
    roleID: 'string',
    scopeID: 'string',
    scope: 'scope',
  },
  scope: {
    id: 'string',
    type: 'string',
    name: 'string',
    description: 'string',
  },
  roleGroup: {
    id: 'string',
    name: 'string',
    description: 'string',
    isDeleted: 'boolean',
  },
  client: {
    id: 'string',
    name: 'string',
    contactNumber: 'string',
    email: 'string',
    totalCollection: 'currency',
    totalCollectionBalance: 'currency',
    totalCollected: 'currency',
    location: 'location',
    isDeleted: 'boolean',
    createdAt: 'date',
  },
  project: {
    id: 'string',
    name: 'string',
    description: 'string',
    budget: 'currency',
    address: 'string',
    isDeleted: 'boolean',
    startDate: 'date',
    endDate: 'date',
    status: 'enum',
    isLead: 'boolean',
    location: 'location',
    client: 'client',
    downpaymentAmount: 'currency',
    retentionAmount: 'currency',
    totalCollection: 'currency',
    totalCollectionBalance: 'currency',
    totalCollected: 'currency',
    progressPercentage: 'number',
    isProjectStarted: 'boolean',
    winProbability: 'ref:win-probability',
    personInCharge: 'account',
  },
  boardLane: {
    id: 'string',
    name: 'string',
    description: 'string',
    order: 'number',
    key: 'ref:board-lane',
  },

  warehouse: {
    id: 'string',
    name: 'string',
    location: 'location',
    project: 'project',
    size: 'number',
    capacity: 'number',
    createdAt: 'date',
    updatedAt: 'date',
    isDeleted: 'boolean',
    warehouseType: 'ref:warehouse-type',
    isMainWarehouse: 'boolean',
  },
  boqItem: {
    id: 'string',
    boqTable: 'boqTable',
    item: 'item',
    amount: 'number',
    createdAt: 'date',
    updatedAt: 'date',
  },
  item: {
    id: 'string',
    name: 'string',
    sku: 'string',
    description: 'string',
    estimatedBuyingPrice: 'currency',
    sellingPrice: 'currency',
    minimumStockLevelPrice: 'currency',
    maximumStockLevelPrice: 'currency',
    size: 'string',
    isVariation: 'boolean',
    parent: 'string',
    isDeleted: 'boolean',
    isDraft: 'boolean',
    createdAt: 'date',
    updatedAt: 'date',
    uom: 'ref:uom-list',
  },
  tag: {
    id: 'string',
    tag_key: 'string',
    createdAt: 'date',
    updatedAt: 'date',
  },
  itemTag: {
    id: 'string',
    itemId: 'string',
    tagId: 'string',
    createdAt: 'date',
    updatedAt: 'date',
    tag: 'tag',
  },
  inventory: {
    id: 'string',
    warehouseId: 'string',
    createdAt: 'date',
    updatedAt: 'date',
    quantity: 'number',
    inventoryHistory: 'inventoryHistory',
  },
  inventoryItem: {
    inventoryId: 'string',
    itemId: 'string',
    quantity: 'number',
    createdAt: 'date',
    updatedAt: 'date',
  },
  inventoryHistory: {
    id: 'number',
    itemId: 'string',
    quantity: 'quantity',
    quantityBefore: 'quantity',
    quantityAfter: 'quantity',
    unitPrice: 'currency',
    total: 'currency',
    itemName: 'string',
    itemSku: 'string',
    itemRate: 'currency',
    itemDescription: 'string',
    item: 'item',
    itemReceipt: 'itemReceipt',
    partnerReceipt: 'itemReceipt',
    remainingQuantity: 'number',
  },

  itemReceipt: {
    id: 'string',
    number: 'string',
    code: 'string',
    type: 'ref:item-receipt-type',
    memo: 'string',
    itemName: 'string',
    itemSku: 'string',
    itemDescription: 'string',
    totalPayableAmount: 'currency',
    totalSettledAmount: 'currency',
    createdAt: 'date',
    updatedAt: 'date',
    supplier: 'supplier',
    warehouse: 'warehouse',
    processedBy: 'string',
    partnerReceipt: 'itemReceipt',
    taxType: 'ref:tax-type',
    paymentTerms: 'ref:payment-terms',
    deliveryTerms: 'ref:delivery-terms',
    delivery: 'delivery',
    project: 'project',
  },
  supplierItems: {
    supplierPrice: 'currency',
    updatedAt: 'date',
    supplier: 'supplier',
    item: 'item',
  },
  purchaseRequestSupplier: {
    id: 'string',
    purchaseRequestId: 'number',
    supplierId: 'number',
    paymentTerms: 'ref:payment-terms',
    deliveryTerms: 'ref:delivery-terms',
    supplier: 'supplier',
  },
  purchaseRequest: {
    id: 'number',
    itemReceipt: 'itemReceipt',
    itemReceiptId: 'string',
    status: 'ref:purchase-request-status',
    deliveryDate: 'date',
  },
  receiptItems: {
    itemName: 'string',
    itemSku: 'string',
    itemDescription: 'string',
    itemRate: 'currency',
    quantity: 'number',
    unitPrice: 'currency',
    total: 'currency',
    item: 'item',
  },
  billOfQuantity: {
    id: 'string',
    contractId: 'string',
    revision: 'number',
    subject: 'string',
    contractLocation: 'string',
    expirationDate: 'date',
    totalMaterialCost: 'number',
    totalLaborCost: 'number',
    totalDirectCost: 'number',
    totalCost: 'number',
    createdAt: 'date',
    updatedAt: 'date',
    isDeleted: 'boolean',
    isDraft: 'boolean',
    projectId: 'number',
    createdByAccount: 'account',
    updatedByAccount: 'account',
    sourceBillOfQuantity: 'billOfQuantity',
    lastKeyUsed: 'number',
    status: 'string',
  },
  equipment: {
    id: 'string',
    name: 'string',
    equipment: 'equipment',
    serialCode: 'string',
    currentWarehouse: 'warehouse',
    brand: 'brand',
    equipmentType: 'ref:equipment-type',
    createdAt: 'date',
  },
  equipmentParts: {
    id: 'string',
    partName: 'string',
    equipment: 'equipment',
    scheduleDay: 'number',
    lastMaintenanceDate: 'date',
    nextMaintenanceDate: 'date',
    itemsCount: 'number',
  },
  equipmentPartsMaintenanceHistory: {
    id: 'number',
    checkedBy: 'account',
    repairedBy: 'account',
    isWorking: 'boolean',
    repairStage: 'ref:repair-stage',
    maintenanceProof: 'files',
    maintenanceDate: 'date',
    repairDate: 'date',
    createdAt: 'date',
    updatedAt: 'date',
    equipmentParts: 'equipmentParts',
    repairItemPurchaseRequest: 'purchaseRequest',
  },

  rfp: {
    id: 'string',
    payeeType: 'ref:payee-type',
    payeeId: 'string',
    payee: 'string',
    paymentType: 'ref:fund-account-type',
    projectId: 'string',
    amount: 'currency',
    purchaseOrderId: 'string',
    memo: 'string',
    status: 'ref:request-for-payment-status',
  },

  pettyCash: {
    id: 'string',
    username: 'string',
    firstName: 'string',
    lastName: 'string',
    email: 'string',
    contactNumber: 'string',
    pettyCashAmount: 'currency',
    createdAt: 'date',
    updatedAt: 'date',
  },
  brand: {
    id: 'number',
    name: 'string',
  },
  equipmentModel: {
    id: 'string',
    equipmentId: 'string',
    name: 'string',
    plateNum: 'string',
    number: 'string',
    location: 'location',
    status: 'string',
    type: 'string',
    driverId: 'string',
    equipment: 'equipment',
    driver: 'account',
    maintenanceHistories: 'equipmentMaintenanceHistory[]',
  },
  location: {
    id: 'string',
    name: 'string',
    region: 'locationRegion',
    province: 'locationProvince',
    municipality: 'locationMunicipality',
    barangay: 'locationBarangay',
    zipCode: 'string',
    landmark: 'string',
    description: 'string',
    createdAt: 'date',
    updatedAt: 'date',
    isDeleted: 'boolean',
  },
  locationRegion: {
    id: 'number',
    name: 'string',
    description: 'string',
  },
  locationProvince: {
    id: 'number',
    name: 'string',
    region: 'locationRegion',
  },
  locationMunicipality: {
    id: 'number',
    name: 'string',
  },
  locationBarangay: {
    id: 'number',
    name: 'string',
  },
  delivery: {
    id: 'number',
    sourceDeliveryReceipt: 'itemReceipt',
    deliveredDeliveryReceipt: 'itemReceipt',
    fromWarehouse: 'warehouse',
    toWarehouse: 'warehouse',
    inTransitWarehouse: 'warehouse',
    inTransitDeliveryReceipt: 'itemReceipt',
    deliveryDate: 'date',
    status: 'ref:delivery-status',
    truckLoadStage: 'ref:truck-load-stage',
    createdAt: 'date',
  },
  notification: {
    id: 'string',
    hasRead: 'boolean',
    notificationData: 'notificationData',
    notificationSender: 'notificationSender',
    project: 'project',
  },
  notificationSender: {
    id: 'string',
    username: 'string',
    firstName: 'string',
    lastName: 'string',
    image: 'string',
  },
  notificationData: {
    id: 'string',
    content: 'string',
    code: 'string',
    showDialogModule: 'ShowDialogModules',
    showDialogId: 'string',
    createdAt: 'date',
    updatedAt: 'date',
  },

  task: {
    id: 'number',
    title: 'string',
    description: 'string',
    order: 'number',
    createdAt: 'date',
    updatedAt: 'date',
    assignedTo: 'account',
    createdBy: 'account',
    boardLane: 'boardLane',
    project: 'project',
    dueDate: 'date',
    isRead: 'boolean',
    priorityLevel: 'ref:task-priority',
    roleGroup: 'roleGroup',
    assignedByDifficultySet: 'ref:task-difficulty',
    assignedToDifficultySet: 'ref:task-difficulty',
    isOpen: 'boolean',
    taskType: 'string',
    ApprovalMetadata: 'approvalMetadata',
  },
  supplierPriceUpdate: {
    id: 'number',
    supplier: 'supplier',
    item: 'item',
    supplierPrice: 'currency',
    updateBy: 'account',
    createdAt: 'date',
  },
  supplier: {
    id: 'number',
    name: 'string',
    contactNumber: 'string',
    email: 'string',
    taxType: 'ref:tax-type',
    paymentTerms: 'ref:payment-terms',
    location: 'location',
    isDeleted: 'boolean',
    createdAt: 'date',
    updatedAt: 'date',
  },
  purchaseOrder: {
    id: 'string',
    balance: 'currency',
    isOpen: 'boolean',
    number: 'number',
    code: 'string',
    type: 'string',
    memo: 'string',
    totalPayableAmount: 'currency',
    totalSettledAmount: 'currency',
    createdAt: 'date',
    updatedAt: 'date',
    supplier: 'supplier',
    warehouse: 'warehouse',
    taxType: 'ref:tax-type',
    paymentTerms: 'ref:payment-terms',
  },
  purchaseOrderPayment: {
    purchaseOrder: 'purchaseOrder',
    fundAccount: 'fundAccount',
    amount: 'currency',
    fee: 'currency',
    createdAt: 'date',
  },
  purchaseOrderItem: {
    id: 'string',
    item: 'item',
    quantity: 'number',
    unitPrice: 'currency',
    total: 'currency',
  },
  fundAccount: {
    id: 'number',
    name: 'string',
    description: 'string',
    accountNumber: 'string',
    type: 'ref:fund-account-type',
    balance: 'currency',
    createdAt: 'date',
    updatedAt: 'date',
  },
  fundTransaction: {
    id: 'number',
    amount: 'currency',
    balanceBefore: 'currency',
    balanceAfter: 'currency',
    type: 'string',
    memo: 'string',
    code: 'ref:wallet-code',
    fundAccount: 'fundAccount',
    createdAt: 'date',
    updatedAt: 'date',
  },
  files: {
    id: 'number',
    name: 'string',
    type: 'string',
    url: 'string',
    size: 'file-size',
    uploadedBy: 'account',
    fieldName: 'string',
    originalName: 'string',
    encoding: 'string',
    mimetype: 'string',
    project: 'project',
    task: 'task',
    createdAt: 'date',
  },
  pettyCashLiquidation: {
    id: 'string',
    title: 'string',
    description: 'string',
    attachmentProof: 'files',
    requestedBy: 'account',
    amount: 'currency',
    status: 'ref:petty-cash-liquidation-status',
  },
  collection: {
    id: 'string',
    project: 'project',
    description: 'string',
    type: 'ref:collection-type',
    amount: 'currency',
    amountPaid: 'currency',
    accomplishmentReference: 'projectAccomplishment',
    reviewedBy: 'account',
    createdAt: 'date',
    updatedAt: 'date',
  },
  projectAccomplishment: {
    id: 'string',
    project: 'project',
    title: 'string',
    previousPercentage: 'number',
    percentage: 'number',
    accomplishmentDate: 'date',
    attachment: 'files',
    description: 'string',
    reviewedBy: 'account',
    createdAt: 'date',
    updatedAt: 'date',
  },
  collectionAccomplishmentSummary: {
    id: 'string',
    project: 'project',
    description: 'string',
    collectionType: 'ref:collection-type',
    amount: 'currency',
    amountPaid: 'currency',
    previous: 'collectionAccomplishmentSummaryBreakdown',
    toDate: 'collectionAccomplishmentSummaryBreakdown',
    thisPeriod: 'collectionAccomplishmentSummaryBreakdown',
    billableAmount: 'currency',
    collectedAmount: 'currency',
    outstandingBalance: 'currency',
    projectDownpaymentPercentage: 'number',
    projectRetentionFeePercentage: 'number',
  },
  collectionAccomplishmentSummaryBreakdown: {
    percentage: 'number',
    amount: 'currency',
    downpaymentDeduction: 'currency',
    retentionDeduction: 'currency',
    subtotal: 'currency',
  },
  nationalHoliday: {
    name: 'string',
    type: 'string',
    date: 'date',
  },
  localHoliday: {
    id: 'number',
    name: 'string',
    type: 'ref:holiday-type',
    date: 'date',
    province: 'locationProvince',
  },
  shift: {
    id: 'number',
    shiftCode: 'string',
    isFlexiTime: 'boolean',
    targetHours: 'number',
    breakHours: 'number',
  },
  shiftTime: {
    startTime: 'time',
    endTime: 'time',
  },
  approvalMetadata: {
    id: 'number',
    sourceModule: 'string',
    sourceId: 'string',
    actions: 'array',
    approvalLevel: 'number',
    maxApprovalLevel: 'number',
    sourceData: 'object',
  },
};
