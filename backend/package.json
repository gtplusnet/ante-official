{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "prebuild": "rimraf dist",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "dev": "npx kill-port 3000 && cross-env NODE_ENV=development nest start --watch --host 0.0.0.0",
    "start:dev": "npx kill-port 3000 && cross-env NODE_ENV=development nest start --watch --host 0.0.0.0",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --config ./test/jest.config.js --maxWorkers=1",
    "test:watch": "jest --config ./test/jest.config.js --watch --maxWorkers=1",
    "test:coverage": "jest --config ./test/jest.config.js --coverage --maxWorkers=1",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand --config ./test/jest.config.js",
    "test:unit": "jest --config ./test/jest.config.js --testPathPattern='spec.ts$' --maxWorkers=1",
    "test:unit:watch": "jest --config ./test/jest.config.js --testPathPattern='spec.ts$' --watch --maxWorkers=1",
    "test:unit:coverage": "jest --config ./test/jest.config.js --testPathPattern='spec.ts$' --coverage --maxWorkers=1",
    "test:e2e": "jest --config ./test/jest-e2e.json --runInBand",
    "test:api": "jest --config ./test/api/jest.config.js --runInBand --forceExit",
    "test:api:watch": "jest --config ./test/api/jest.config.js --watch --runInBand",
    "test:api:verbose": "jest --config ./test/api/jest.config.js --runInBand --forceExit --verbose",
    "test:api:coverage": "jest --config ./test/api/jest.config.js --runInBand --forceExit --coverage",
    "test:services": "jest --config ./test/jest.config.js --testPathPattern='src/.*/.*\\.service\\.spec\\.ts$' --maxWorkers=1",
    "security:apply": "ts-node src/security/cli/apply-rules.ts --all",
    "security:apply-rules": "ts-node src/security/cli/apply-rules.ts",
    "security:apply-table": "ts-node src/security/cli/apply-rules.ts --table=",
    "security:list-tables": "ts-node src/security/cli/apply-rules.ts --list",
    "security:dry-run": "ts-node src/security/cli/apply-rules.ts --dry-run",
    "views:apply": "ts-node src/views/cli/apply-views.ts",
    "views:apply-force": "ts-node src/views/cli/apply-views.ts --force",
    "views:dry-run": "ts-node src/views/cli/apply-views.ts --dry-run",
    "views:list": "ts-node src/views/cli/apply-views.ts --list",
    "views:show": "ts-node src/views/cli/apply-views.ts --show-sql",
    "test:controllers": "jest --config ./test/jest.config.js --testPathPattern='src/.*/.*\\.controller\\.spec\\.ts$' --maxWorkers=1",
    "test:middleware": "jest --config ./test/jest.config.js --testPathPattern='src/middleware/.*\\.spec\\.ts$' --maxWorkers=1",
    "test:common": "jest --config ./test/jest.config.js --testPathPattern='src/common/.*\\.spec\\.ts$' --maxWorkers=1",
    "test:all": "yarn test:unit && yarn test:e2e && yarn test:api",
    "migrate:dev": "dotenv -e .env.development -- npx prisma migrate dev",
    "migrate:reset": "dotenv -e .env.development -- npx prisma migrate reset",
    "migrate:production": "dotenv -e .env.production -- npx prisma migrate deploy",
    "migrate:with-security": "bash scripts/deploy-database-changes.sh",
    "deploy:database": "npx prisma migrate deploy && npx prisma generate",
    "migrate:existing-files": "node scripts/migrate-existing-files-to-cms.js",
    "seed": "ts-node prisma/seed/index.ts",
    "ts-check": "tsc --noEmit",
    "postinstall": "prisma generate",
    "migration:run": "ts-node -r tsconfig-paths/register src/cli.ts migration run --all",
    "migration:run:one": "ts-node -r tsconfig-paths/register src/cli.ts migration run --name",
    "migration:status": "ts-node -r tsconfig-paths/register src/cli.ts migration status",
    "migration:list": "ts-node -r tsconfig-paths/register src/cli.ts migration list",
    "migration:dry-run": "ts-node -r tsconfig-paths/register src/cli.ts migration run --all --dry-run",
    "migration:verify": "ts-node -r tsconfig-paths/register src/cli.ts migration verify",
    "migration:rollback": "ts-node -r tsconfig-paths/register src/cli.ts migration rollback",
    "prepare": "husky"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.645.0",
    "@aws-sdk/lib-storage": "^3.645.0",
    "@google/generative-ai": "^0.24.1",
    "@nestjs/bullmq": "^11.0.3",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.0",
    "@nestjs/core": "^10.4.1",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/platform-express": "10.4.20",
    "@nestjs/platform-socket.io": "^10.3.8",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/websockets": "^10.3.8",
    "@prisma/client": "5.22.0",
    "@sentry/nestjs": "^10.8.0",
    "@supabase/supabase-js": "^2.57.0",
    "@types/bcrypt": "^6.0.0",
    "@types/crypto-js": "^4.2.2",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/handlebars": "^4.0.40",
    "@types/imap": "^0.8.42",
    "@types/inquirer": "^8",
    "@types/js-yaml": "^4.0.9",
    "@types/multer": "^1.4.12",
    "@types/nodemailer": "^6.4.17",
    "@types/pg": "^8.15.5",
    "@types/socket.io-client": "^3.0.0",
    "aws-sdk": "^2.1691.0",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "bullmq": "^5.58.2",
    "cache-manager": "^7.1.1",
    "cache-manager-redis-store": "^3.0.1",
    "chalk": "^4.1.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "console-table-printer": "^2.14.6",
    "cron": "^3.1.7",
    "cron-parser": "^5.3.0",
    "cross-spawn": "^7.0.6",
    "crypto-js": "^4.2.0",
    "csv-parser": "^3.2.0",
    "date-fns": "^3.6.0",
    "dotenv": "^17.2.1",
    "exceljs": "^4.4.0",
    "express-hbs": "^2.5.0",
    "firebase-admin": "^13.4.0",
    "fluent-ffmpeg": "^2.1.3",
    "fs-extra": "^11.3.1",
    "google-auth-library": "^10.2.1",
    "handlebars": "^4.7.8",
    "hbs": "^4.2.0",
    "imap": "^0.8.19",
    "ioredis": "^5.7.0",
    "js-yaml": "^4.1.0",
    "mailparser": "^3.7.3",
    "moment": "^2.30.1",
    "moment-timezone": "^0.5.48",
    "mongoose": "^8.15.0",
    "multer": "2.0.2",
    "nest-commander": "^3.19.0",
    "nest-winston": "^1.9.7",
    "newrelic": "^13.1.0",
    "node-color-log": "^12.0.0",
    "node-pop3": "^0.9.1",
    "node-telegram-bot-api": "^0.66.0",
    "nodemailer": "^7.0.3",
    "openai": "^5.3.0",
    "pdf-parse": "^1.1.1",
    "pg": "^8.16.3",
    "redis": "^5.8.2",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "sharp": "^0.34.2",
    "socket-io": "^1.0.0",
    "socket.io-client": "^4.7.5",
    "winston": "^3.14.2",
    "xlsx": "^0.18.5",
    "yaml": "^2.8.1"
  },
  "prisma": {
    "seed": "ts-node prisma/seed/index.ts"
  },
  "resolutions": {
    "form-data": "^4.0.4",
    "semver": "^7.5.2",
    "cross-spawn": "^7.0.5"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/preset-env": "^7.25.4",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.4.1",
    "@swc/cli": "^0.7.8",
    "@swc/core": "^1.13.5",
    "@types/cron": "^2.4.3",
    "@types/exceljs": "^0.5.3",
    "@types/express": "^4.17.17",
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/pdf-parse": "^1.1.5",
    "@types/sharp": "^0.32.0",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "babel-jest": "^29.7.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^9.1.7",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^5.10.2",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.2.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "engines": {
    "npm": "please-use-yarn",
    "yarn": ">= 1.22.19"
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
