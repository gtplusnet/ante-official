// Global Input Template Styles
// Matches Figma design with Material Design patterns

// CSS Custom Properties
.global-input-template {
  position: relative;
  margin-bottom: 16px;
  font-family: "Roboto", sans-serif;

  // Base input field styles
  .input-field {
    width: 100%;
    height: 45px;
    padding: 0 12px;
    border-radius: 8px;
    border: 1px solid #dde1f0;
    font-size: var(--font-label-large);
    font-family: "Roboto", sans-serif;
    font-weight: var(--weight-label-meidum);
    outline: none;
    transition: all 0.15s ease;
    box-sizing: border-box;

    &::placeholder {
      color: transparent; // Hide native placeholder since we use floating label
      opacity: 0;
    }

    &:focus {
      border: 2px solid var(--q-primary);
    }

    &:hover:not(:focus) {
      border: 1px solid #000;
    }

    &:disabled {
      background-color: var(--input-disabled-bg);
      border-color: var(--input-disabled-border);
      color: #999;
      cursor: not-allowed;
    }

    &:readonly {
      background-color: #fafafa;
      cursor: default;
    }
  }

  // Date input specific styles
  :deep(.q-field--dense .q-field__control),
  :deep(.q-field--dense .q-field__marginal) {
    height: 45px !important;
    border-radius: 8px !important;
  }

  .date-input {
    height: 45px;
  }

  // Textarea specific styles
  .textarea {
    height: 165px;
    padding: 14px;
    font-size: var(--font-label-large);
    resize: vertical;
    min-height: 100px;
    line-height: 1.5;
    font-family: "Roboto", sans-serif;
    font-weight: 400; // Regular weight for textarea

    &:focus {
      border: 2px solid var(--q-primary);
    }
  }

  // Select specific styles (for q-select)
  .select-field {
    :deep(.q-field__control) {
      height: 45px !important;
      border-radius: 8px !important;
    }
    
    :deep(.q-field__native) {
      font-size: var(--font-label-large);
    }

    :deep(.q-field__marginal) {
      height: 45px !important;
    }

    :deep(.q-field--outlined .q-field__control) {
      &:hover:before {
        border-color: #000;
      }
      
      &:before {
        border: 1px solid #dde1f0;
        border-radius: 8px;
      }
    }

    :deep(.q-field--focused .q-field__control:before) {
      border: 2px solid var(--q-primary);
    }

    :deep(.q-field--disabled .q-field__control) {
      background-color: var(--input-disabled-bg);
      
      &:before {
        border-color: var(--input-disabled-border);
      }
    }

    :deep(.q-field__append) {
      color: var(--q-gray-light);
    }
  }

  .clear-icon {
    position: absolute;
    right: 35px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--q-gray-light);
    cursor: pointer;
    transition: transform 0.3s ease;

    &.rotated {
      transform: translateY(-50%) rotate(180deg);
    }
  }

  // Time input specific styles - remove colon separator and dashes
  .input-field[type="time"] {
    &::-webkit-datetime-edit-text {
      color: transparent !important;
      -webkit-user-select: none !important;
      user-select: none !important;
    }
    
    &::-webkit-datetime-edit-hour-field:not([value]),
    &::-webkit-datetime-edit-minute-field:not([value]) {
      color: transparent !important;
    }
    
    &::-webkit-datetime-edit {
      color: transparent !important;
    }
    
    &:focus {
      &::-webkit-datetime-edit {
        color: var(--q-dark) !important;
      }
      
      &::-webkit-datetime-edit-hour-field,
      &::-webkit-datetime-edit-minute-field {
        color: var(--q-dark) !important;
      }

      &::-webkit-datetime-edit-text {
        color: var(--q-dark) !important;
      }
    }
    
    // Hide placeholder dashes completely
    &::-webkit-input-placeholder {
      color: transparent !important;
    }
    
    &::placeholder {
      color: transparent !important;
    }
  }
  
  // Show time values when component has value
  &.has-time-value .input-field[type="time"] {
    &::-webkit-datetime-edit {
      color: var(--q-dark) !important;
    }

    &::-webkit-datetime-edit-text {
      color: var(--q-dark) !important;
    }
    
    &::-webkit-datetime-edit-hour-field,
    &::-webkit-datetime-edit-minute-field {
      color: var(--q-dark) !important;
    }
  }

  // File input styles
  .file-input-wrapper {
    position: relative;

    .file-actions {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      display: flex;
      gap: 8px;
    }

    .file-input-hidden {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    .file-display {
      cursor: pointer;
      font-size: var(--font-label-large);
      display: flex;
      align-items: center;

      .file-text {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      &:active {
        border: 2px solid var(--q-primary);
      }

      &.has-file {
        color: var(--q-secondary);
      }

      &:focus {
        border: 2px solid var(--q-primary);
      }
    }
  }

  // Phone input styles
  .phone-input-wrapper {
    display: flex;
    align-items: center;
    transition: all .3s ease;

    &:hover {
      border-color: var(--input-primary-color);
    }

    &:focus-within {
      border: 2px solid var(--input-primary-color);
    }

    .country-code {
      position: absolute;
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 0 12px;

      .code {
        color: var(--input-placeholder-color);
        font-size: var(--input-font-size);
        font-weight: 500;
      }
    }
    .phone-input {
      border-radius: 8px;
      padding-left: 40px;
    }
  }

  .floating-label-phone {
    margin-left: -40px;

    &.is-floating {
      margin-left: 0;
    }
  }

  // Text with add button styles
  .text-add-wrapper {
    display: flex;
    gap: 8px;
    align-items: center;

    .text-add-input {
      flex: 1;
    }

    .add-button {
      width: 45px;
      border: 1px solid #dde1f0;
      color: var(--q-dark);
      font-size: 16px;
      font-weight: 500;

      &:hover {
        border-color: var(--q-dark);
      }
    }
  }

  // Floating label styles
  .floating-label {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: var(--font-label-large);
    font-weight: var(--weight-label-large);
    left: 10px;
    color: var(--q-gray-light);
    //   top: 50%;
    //   transform: translateY(-50%);
    //   font-size: var(--input-font-size);
    //   color: var(--input-placeholder-color);
    //   pointer-events: none;
    //   transition: all 0.15s ease;
    //   background-color: transparent;
    //   padding: 0;
    //   z-index: 1;
    //   cursor: text;

    &.is-floating {
      top: -8px;
      left: 12px;
      transform: translateY(0);
      font-size: var(--label-font-size);
      background-color: white;
      padding: 0 6px;
      font-weight: 500;

      &.is-focused {
        color: var(--q-primary);
      }

      &.has-error {
        color: var(--q-error);
      }
    }
  }

  // Error message styles
  .error-message {
    font-size: 11px;
    color: var(--input-error-color);
    margin-top: 4px;
    margin-left: 2px;
    line-height: 1.2;
  }

  // State-specific styles
  &.has-error {
    .input-field,
    .phone-input-wrapper,
    .file-display {
      border-color: var(--q-error);
    }

    .floating-label {
      color: var(--q-error);

      &.is-floating {
        color: var(--q-error);
      }
    }
  }

  &.is-disabled {
    .floating-label {
      color: #999;
    }
  }

  &.has-icon {
    &.icon-left .input-field {
      padding-left: 56px;

      &:focus {
        padding-left: 55px;
      }
    }

    &.icon-left .floating-label {
      left: 52px;

      &.is-floating {
        left: 12px; // Reset to normal position when floating
      }
    }
  }

  // Textarea specific adjustments
  &.input-textarea {
    .floating-label {
      top: 10px; // Adjust for textarea padding
      transform: none;

      &.is-floating {
        top: -8px;
        left: 14px;
        color: var(--q-primary);
        transform: translateY(0);
      }
    }
  }

  // Phone input specific adjustments
  &.input-phone {
    .floating-label {
      left: 80px; // Adjust for country code section

      &.is-floating {
        left: 12px; // Reset to normal position when floating
      }
    }
  }

  // Focus state improvements
  &.is-focused {
    .floating-label {
      color: var(--q-primary);
    }
  }

  // Responsive adjustments
  @media (max-width: 768px) {
    --input-font-size: 16px; // Prevents zoom on iOS

    .input-field {
      padding: 16px;

      &:focus {
        padding: calc(16px - 1px);
      }
    }

    &.has-icon {
      &.icon-left .input-field {
        padding-left: 56px;

        &:focus {
          padding-left: 55px;
        }
      }

      &.icon-right .input-field {
        padding-right: 56px;

        &:focus {
          padding-right: 55px;
        }
      }
    }
  }
}
